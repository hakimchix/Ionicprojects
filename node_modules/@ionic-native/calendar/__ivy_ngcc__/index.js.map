{"version":3,"file":"index.js","sources":["../../../src/@ionic-native/plugins/calendar/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface CalendarOptions {\n  /**\n   * Id\n   */\n  id?: string;\n\n  /**\n   *\n   */\n  firstReminderMinutes?: number;\n\n  /**\n   *\n   */\n  secondReminderMinutes?: number;\n\n  /**\n   * Recurrence. Can be set to `daily`, `weekly`, `monthly` or `yearly`\n   */\n  recurrence?: string;\n\n  /**\n   * Recurrence interval. Valid only when `recurrence` option is set.\n   */\n  recurrenceInterval?: number;\n\n  /**\n   * Recurrence end date. Valid only when `recurrence` option is set.\n   */\n  recurrenceEndDate?: Date;\n\n  /**\n   * Calendar name. Ths is supported by `iOS` only.\n   */\n  calendarName?: string;\n\n  /**\n   * Calendar id\n   */\n  calendarId?: number;\n\n  /**\n   * URL\n   */\n  url?: string;\n}\n\nexport interface NameOrOptions {\n  /** Calendar name */\n  calendarName?: string;\n\n  /** Calendar color as a HEX string */\n  calendarColor?: string;\n}\n\n/**\n * @name Calendar\n * @description\n * This plugin allows you to add events to the Calendar of the mobile device.\n *\n * Requires Cordova plugin: `cordova-plugin-calendar`. For more info, please see the [Calendar plugin docs](https://github.com/EddyVerbruggen/Calendar-PhoneGap-Plugin).\n *\n *\n * @usage\n * ```typescript\n * import { Calendar } from '@ionic-native/calendar';\n *\n * constructor(private calendar: Calendar) { }\n *\n *\n * this.calendar.createCalendar('MyCalendar').then(\n *   (msg) => { console.log(msg); },\n *   (err) => { console.log(err); }\n * );\n * ```\n * @interfaces\n * CalendarOptions\n * NameOrOptions\n */\n@Plugin({\n  pluginName: 'Calendar',\n  plugin: 'cordova-plugin-calendar',\n  pluginRef: 'plugins.calendar',\n  repo: 'https://github.com/EddyVerbruggen/Calendar-PhoneGap-Plugin',\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class Calendar extends IonicNativePlugin {\n  /**\n   * This function checks if we have permission to read/write from/to the calendar.\n   * The promise will resolve with `true` when:\n   * - You're running on iOS, or\n   * - You're targeting API level lower than 23, or\n   * - You're using Android < 6, or\n   * - You've already granted permission\n   *\n   * If this returns false, you should call the `requestReadWritePermission` function\n   * @returns {Promise<boolean>}\n   */\n  @Cordova()\n  hasReadWritePermission(): Promise<boolean> {\n    return;\n  }\n\n  /**\n   * Check if we have read permission\n   * @returns {Promise<boolean>}\n   */\n  @Cordova()\n  hasReadPermission(): Promise<boolean> {\n    return;\n  }\n\n  /**\n   * Check if we have write permission\n   * @returns {Promise<boolean>}\n   */\n  @Cordova()\n  hasWritePermission(): Promise<boolean> {\n    return;\n  }\n\n  /**\n   * Request write permission\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  requestWritePermission(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Request read permission\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  requestReadPermission(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Requests read/write permissions\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  requestReadWritePermission(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Create a calendar. (iOS only)\n   *\n   * @param {string | NameOrOptions} nameOrOptions  either a string name or a options object. If string, provide the calendar name. IF an object, provide a calendar name as a string and a calendar color in hex format as a string\n   * @returns {Promise<any>} Returns a Promise\n   */\n  @Cordova()\n  createCalendar(nameOrOptions: string | NameOrOptions): Promise<any> {\n    return;\n  }\n\n  /**\n   * Delete a calendar. (iOS only)\n   * @param {string} name  Name of the calendar to delete.\n   * @returns {Promise<any>} Returns a Promise\n   */\n  @Cordova()\n  deleteCalendar(name: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Returns the default calendar options.\n   *\n   * @return {CalendarOptions} Returns an object with the default calendar options\n   */\n  @Cordova({\n    sync: true\n  })\n  getCalendarOptions(): CalendarOptions {\n    return;\n  }\n\n  /**\n   * Returns options for a custom calender with specific color\n   *\n   * @return {NameOrOptions} Returns an object with the default options\n   */\n  @Cordova({\n    sync: true\n  })\n  getCreateCalendarOptions(): NameOrOptions {\n    return;\n  }\n\n  /**\n   * Silently create an event.\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @returns {Promise<any>} Returns a Promise\n   */\n  @Cordova()\n  createEvent(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Silently create an event with additional options.\n   *\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n   * @returns {Promise<any>} Returns a Promise\n   */\n  @Cordova()\n  createEventWithOptions(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date,\n    options?: CalendarOptions\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Interactively create an event.\n   *\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @returns {Promise<any>} Returns a Promise\n   */\n  @Cordova()\n  createEventInteractively(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Interactively create an event with additional options.\n   *\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  createEventInteractivelyWithOptions(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date,\n    options?: CalendarOptions\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Find an event.\n   *\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  findEvent(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Find an event with additional options.\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @param {CalendarOptions} [options]  Additional options, see `getCalendarOptions`\n   * @returns {Promise<any>} Returns a Promise that resolves with the event, or rejects with an error.\n   */\n  @Cordova()\n  findEventWithOptions(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date,\n    options?: CalendarOptions\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Find a list of events within the specified date range. (Android only)\n   *\n   * @param {Date} [startDate]  The start date\n   * @param {Date} [endDate]  The end date\n   * @returns {Promise<any>} Returns a Promise that resolves with the list of events, or rejects with an error.\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  listEventsInRange(startDate: Date, endDate: Date): Promise<any> {\n    return;\n  }\n\n  /**\n   * Get a list of all calendars.\n   * @returns {Promise<any>} A Promise that resolves with the list of calendars, or rejects with an error.\n   */\n  @Cordova()\n  listCalendars(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Get a list of all future events in the specified calendar. (iOS only)\n   * @returns {Promise<any>} Returns a Promise that resolves with the list of events, or rejects with an error.\n   */\n  @Cordova({\n    platforms: ['iOS']\n  })\n  findAllEventsInNamedCalendar(calendarName: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Modify an event. (iOS only)\n   *\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @param {string} [newTitle]  The new event title\n   * @param {string} [newLocation]  The new event location\n   * @param {string} [newNotes]  The new event notes\n   * @param {Date} [newStartDate]  The new event start date\n   * @param {Date} [newEndDate]  The new event end date\n   * @return Returns a Promise\n   */\n  @Cordova({\n    platforms: ['iOS']\n  })\n  modifyEvent(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date,\n    newTitle?: string,\n    newLocation?: string,\n    newNotes?: string,\n    newStartDate?: Date,\n    newEndDate?: Date\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Modify an event with additional options. (iOS only)\n   *\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @param {string} [newTitle]  The new event title\n   * @param {string} [newLocation]  The new event location\n   * @param {string} [newNotes]  The new event notes\n   * @param {Date} [newStartDate]  The new event start date\n   * @param {Date} [newEndDate]  The new event end date\n   * @param {CalendarOptions} [filterOptions] Event Options, see `getCalendarOptions`\n   * @param {CalendarOptions} [newOptions]  New event options, see `getCalendarOptions`\n   * @return Returns a Promise\n   */\n  @Cordova({\n    platforms: ['iOS']\n  })\n  modifyEventWithOptions(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date,\n    newTitle?: string,\n    newLocation?: string,\n    newNotes?: string,\n    newStartDate?: Date,\n    newEndDate?: Date,\n    filterOptions?: CalendarOptions,\n    newOptions?: CalendarOptions\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Delete an event.\n   *\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @return Returns a Promise\n   */\n  @Cordova()\n  deleteEvent(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Delete an event from the specified Calendar. (iOS only)\n   *\n   * @param {string} [title]  The event title\n   * @param {string} [location]  The event location\n   * @param {string} [notes]  The event notes\n   * @param {Date} [startDate]  The event start date\n   * @param {Date} [endDate]  The event end date\n   * @param {string} calendarName\n   * @return Returns a Promise\n   */\n  @Cordova({\n    platforms: ['iOS']\n  })\n  deleteEventFromNamedCalendar(\n    title?: string,\n    location?: string,\n    notes?: string,\n    startDate?: Date,\n    endDate?: Date,\n    calendarName?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Open the calendar at the specified date.\n   * @param {Date} date The date you want to open the calendar on\n   * @return {Promise<any>} Promise returns a promise\n   */\n  @Cordova()\n  openCalendar(date: Date): Promise<any> {\n    return;\n  }\n}\n"]}