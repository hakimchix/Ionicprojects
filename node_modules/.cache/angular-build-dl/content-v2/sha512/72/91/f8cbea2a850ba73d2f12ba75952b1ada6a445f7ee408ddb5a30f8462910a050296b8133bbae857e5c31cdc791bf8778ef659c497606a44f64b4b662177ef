{"version":3,"sources":["webpack:///src/app/tasks/tasks.page.html","webpack:///src/app/tasks/tasks-routing.module.ts","webpack:///src/app/tasks/tasks.module.ts","webpack:///src/app/tasks/tasks.page.scss","webpack:///src/app/tasks/tasks.page.ts"],"names":["routes","path","component","resolve","data","canActivate","TasksPageRoutingModule","imports","forChild","exports","providers","TasksPageModule","declarations","TasksPage","fireStore","todosCollection","collection","taskObsrv","snapshotChanges","pipe","actions","map","a","payload","doc","id","d","filter","closed","getopenTasks","subscribe","res","tasks","gettasks","i","item","selector","template"],"mappings":"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","file":"tasks-tasks-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar> <ion-back-button text=\\\"Home\\\" defaultHref=\\\"home\\\"></ion-back-button>\\n    <ion-title>tasks</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-button color=\\\"success\\\"  (click)=\\\"gettasks()\\\">get  all tasks</ion-button>\\n  <ion-button color=\\\"primary\\\" (click)=\\\"getopentask(false)\\\">get opened tasks</ion-button>\\n  <ion-button color=\\\"primary\\\" (click)=\\\"getopentask(true)\\\">get close tasks</ion-button>\\n  \\n  <ion-list>\\n\\n    <ng-container *ngIf=\\\"!tasks || tasks.length == 0\\\">\\n      <div *ngFor=\\\"let n of [0,1,2]\\\" padding>\\n        <ion-skeleton-text>{{n}}</ion-skeleton-text>\\n        <p>\\n          <ion-skeleton-text class=\\\"fake-skeleton\\\"></ion-skeleton-text>\\n        </p>\\n      </div>\\n    </ng-container>\\n \\n    <ion-item-sliding *ngFor=\\\"let item of tasks\\\">\\n      <ion-item [color]=\\\" priority_color(item.priority)\\\" lines=\\\"inset\\\" button [href]=\\\"['task-detail/' + item.id]\\\">\\n      <ion-note>Task Name</ion-note>  <ion-label>\\n          {{ item.task}}    </ion-label> <ion-label>\\n            <ion-note color=\\\"dark\\\">Date of Creation :</ion-note>\\n\\n          <p>{{ item.createdAt | date:'short' }}</p>\\n        </ion-label>\\n        <ion-note color=\\\"dark\\\">priority:</ion-note>\\n        {{ item.priority }}\\n        <ion-item  [color]=\\\" priority_color(item.priority)\\\" slot=\\\"start\\\">\\n        \\n       <ion-item  [color]=\\\" priority_color(item.priority)\\\">  <ion-note color=\\\"dark\\\">Colsed:</ion-note>\\n        <ion-checkbox id=\\\"checkbox\\\" [(ngModel)]=\\\"item.closed\\\" disabled=true> </ion-checkbox>\\n      </ion-item>\\n      </ion-item>\\n      </ion-item>\\n    <ion-item>\\n      <ion-item>\\n      \\n      </ion-item>\\n        \\n        </ion-item>\\n       \\n      <ion-item-options >\\n         \\n        <ion-item-option  (click)=\\\"remove(item.id)\\\" color=\\\"danger\\\" expandable=true>\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n          \\n        </ion-item-option>\\n        \\n      </ion-item-options>\\n      <ion-item-options side=\\\"start\\\">\\n        <ion-item-option (click)=\\\"close(item)\\\"  color=\\\"success\\\" expandable=true type=\\\"button\\\">\\n        Close\\n        </ion-item-option>\\n          <ion-item-option (click)=\\\"open(item)\\\"  color=\\\"danger\\\"  expandable=true type=\\\"button\\\">\\n           Open\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n \\n  </ion-list>\\n \\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button routerLink=\\\"/task-detail\\\" routerDirection=\\\"forward\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n \\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfilePageResolver } from '.././profile/profile.resolver';\nimport { ProfilePageGuard } from '.././profile/profile-can-activate.guard';\nimport { TasksPage } from './tasks.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TasksPage,  resolve: {\n      data: ProfilePageResolver\n    },\n    canActivate: [ProfilePageGuard],\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],providers: [ProfilePageResolver, ProfilePageGuard]\n})\nexport class TasksPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TasksPageRoutingModule } from './tasks-routing.module';\n\nimport { TasksPage } from './tasks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TasksPageRoutingModule\n  ],\n  declarations: [TasksPage]\n})\nexport class TasksPageModule {}\n","export default \"#checkbox {\\n  background-color: transparent;\\n  border-bottom: #75be63 solid 4px;\\n  font-family: \\\"Ionicons\\\";\\n  display: inline-block;\\n  --checkmark-width:10px;\\n  --size:25px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFza3MvQzpcXFVzZXJzXFxhY2hpZ1xcaW9uaWNfcHJqXFxpb25pYzUtZmlyZWJhc2Uvc3JjXFxhcHBcXHRhc2tzXFx0YXNrcy5wYWdlLnNjc3MiLCJzcmMvYXBwL3Rhc2tzL3Rhc2tzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDZCQUFBO0VBQ0osZ0NBQUE7RUFDQSx1QkFBQTtFQUNBLHFCQUFBO0VBQ0Esc0JBQUE7RUFDQSxXQUFBO0FDQ0EiLCJmaWxlIjoic3JjL2FwcC90YXNrcy90YXNrcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY2hlY2tib3h7IFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbmJvcmRlci1ib3R0b206IHJnYigxMTcsIDE5MCwgOTkpIHNvbGlkIDRweDtcclxuZm9udC1mYW1pbHk6IFwiSW9uaWNvbnNcIjtcclxuZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4tLWNoZWNrbWFyay13aWR0aDoxMHB4O1xyXG4tLXNpemU6MjVweDtcclxuICAgIH1cclxuIiwiI2NoZWNrYm94IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206ICM3NWJlNjMgc29saWQgNHB4O1xuICBmb250LWZhbWlseTogXCJJb25pY29uc1wiO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC0tY2hlY2ttYXJrLXdpZHRoOjEwcHg7XG4gIC0tc2l6ZToyNXB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore,AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Task {\n  id?: string;\n  task: string;\n  priority: number;\n  createdAt: number;\n  closedAt:any;\n  closed:boolean;\n\n}\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.page.html',\n  styleUrls: ['./tasks.page.scss'],\n})\nexport class TasksPage implements OnInit {\n  taskObsrv: Observable<Task[]>;\ntasks :Task[];\n \n  private todosCollection: AngularFirestoreCollection<Task>;\n  constructor(private fireStore: AngularFirestore) {\n    this.todosCollection = fireStore.collection<Task>('tasks');\n \n    this.taskObsrv = this.todosCollection.snapshotChanges().pipe(\n    map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      });\n    })\n  );\n   }\n   getopenTasks(d) {\n   \n    \n \n    return this.todosCollection.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        }).filter(a=>a.closed===d);\n      })\n    );\n  }\n   async getopentask(d){\n    this.getopenTasks(d).subscribe(res =>{ this.tasks =res;});\n    \n   }\nasync gettasks(){\n\nthis.taskObsrv.subscribe(a=>{this.tasks=a;})\n}\n  ngOnInit() {this.gettasks();\n  }\n  priority_color(i){\n\n    switch(i) { \n      case 1: { \n        \n        return \"danger\";\n        break; \n     }\n      case 2: { \n         //statements; \n         return \"primary\";\n         break; \n      } \n      case 3: { \n         //statements; \n         return \"light\";\n         break; \n      } \n      default: { \n         //statements; \n         return \"dark\";\n         break; \n      } \n    } \n      }\n\n      close(item) {/*\n        this.todoService.closeTask(item,item.id);*/\n       }\n       open(item) {/*\n        this.todoService.openTask(item,item.id);*/\n       }\n      remove(item) {/*\n       this.todoService.removeTask(item);*/\n      }\n\n}\n"]}