{"version":3,"sources":["webpack:///src/app/task-detail/task-detail.page.html","webpack:///src/app/task-detail/task-detail-routing.module.ts","webpack:///src/app/task-detail/task-detail.module.ts","webpack:///src/app/task-detail/task-detail.page.scss","webpack:///src/app/task-detail/task-detail.page.ts"],"names":["routes","path","component","resolve","data","TaskDetailPageRoutingModule","imports","forChild","exports","providers","TaskDetailPageModule","declarations","TaskDetailPage","router","route","nav","fireStore","loadingController","task","createdAt","Date","getTime","priority","closedAt","closed","taskId","todosCollection","collection","loadTodo","todo","id","doc","update","add","then","navigateByUrl","err","console","error","valueChanges","snapshot","params","create","message","loading","present","dismiss","getTodo","subscribe","res","todos","updateTask","addTask","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,gEAFb;AAE8BC,aAAO,EAAE;AACnCC,YAAI,EAAE;AAD6B;AAFvC,KADqB,CAAvB;;AAeA,QAAaC,2BAA2B;AAAA;AAAA,KAAxC;;AAAaA,+BAA2B,6DAJvC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,aAAO,EAAE,CAAC,4DAAD,CAFD;AAEgBC,eAAS,EAAE,CAAC,6EAAD,EAAsB,oFAAtB;AAF3B,KAAT,CAIuC,GAA3BJ,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAaK,oBAAoB;AAAA;AAAA,KAAjC;;AAAaA,wBAAoB,6DAThC,+DAAS;AACRJ,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,uFAJO,CADD;AAORK,kBAAY,EAAE,CAAC,gEAAD;AAPN,KAAT,CASgC,GAApBD,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAaE,cAAc;AAYzB,8BAAoBC,MAApB,EAA2CC,KAA3C,EAA0EC,GAA1E,EAAsGC,SAAtG,EAA2IC,iBAA3I,EAAiL;AAAA;;AAA7J,aAAAJ,MAAA,GAAAA,MAAA;AAAuB,aAAAC,KAAA,GAAAA,KAAA;AAA+B,aAAAC,GAAA,GAAAA,GAAA;AAA4B,aAAAC,SAAA,GAAAA,SAAA;AAAqC,aAAAC,iBAAA,GAAAA,iBAAA;AAX3I,aAAAC,IAAA,GAAa;AACXA,cAAI,EAAE,MADK;AAEXC,mBAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAFA;AAGXC,kBAAQ,EAAE,CAHC;AAIXC,kBAAQ,EAAC,EAJE;AAKXC,gBAAM,EAAC;AALI,SAAb;AAQA,aAAAC,MAAA,GAAS,IAAT;AAIF,aAAKC,eAAL,GAAqB,KAAKV,SAAL,CAAeW,UAAf,CAA0B,OAA1B,CAArB;AACA,aAAKC,QAAL;AACG;;AAfwB;AAAA;AAAA,mCAmBdC,IAnBc,EAmBFC,EAnBE,EAmBU;AACjC,iBAAO,KAAKJ,eAAL,CAAqBK,GAArB,CAAyBD,EAAzB,EAA6BE,MAA7B,CAAoCH,IAApC,CAAP;AACD;AArBwB;AAAA;AAAA,gCAuBjBA,IAvBiB,EAuBL;AAAA;;AAClB,iBAAO,KAAKH,eAAL,CAAqBO,GAArB,CAAyBJ,IAAzB,EACNK,IADM,CACD,YAAI;AAAC,iBAAI,CAACrB,MAAL,CAAYsB,aAAZ,CAA0B,QAA1B;AAAqC,WADzC,WAEA,UAAAC,GAAG,EAAE;AAACC,mBAAO,CAACC,KAAR,CAAcF,GAAd;AAAmB,WAFzB,CAAP;AAID;AA5BwB;AAAA;AAAA,mCAgCRN,EAhCQ,EAgCJ;;;;;;;;qDACZ,KAAKJ,eAAL,CAAqBK,GAArB,CAAyBD,EAAzB,cACNI,IADM,CACD,YAAI;AAAC,4BAAI,CAACrB,MAAL,CAAYsB,aAAZ,CAA0B,QAA1B;AAAqC,qBADzC,WAEA,UAAAC,GAAG,EAAE;AAACC,6BAAO,CAACC,KAAR,CAAcF,GAAd;AAAmB,qBAFzB,C;;;;;;;;;AAIR;AArCwB;AAAA;AAAA,gCAsCjBN,EAtCiB,EAsCb;AACV,iBAAO,KAAKJ,eAAL,CAAqBK,GAArB,CAA+BD,EAA/B,EAAmCS,YAAnC,EAAP;AACD;AAxCwB;AAAA;AAAA,mCAyCd;AACT,eAAKd,MAAL,GAAc,KAAKX,KAAL,CAAW0B,QAAX,CAAoBC,MAApB,CAA2BX,EAAzC;;AACF,cAAI,KAAKL,MAAT,EAAkB;AAElB,iBAAKG,QAAL;AACC;AACA;AA/CwB;AAAA;AAAA,mCAgDR;;;;;;;;;;AACC,2BAAM,KAAKX,iBAAL,CAAuByB,MAAvB,CAA8B;AAClDC,6BAAO,EAAE;AADyC,qBAA9B,CAAN;;;AAAVC,2B;;AAGN,2BAAMA,OAAO,CAACC,OAAR,EAAN;;;AAKAD,2BAAO,CAACE,OAAR;AACG,yBAAKC,OAAL,CAAa,KAAKtB,MAAlB,EAA0BuB,SAA1B,CAAoC,UAAAC,GAAG,EAAI;AAE1C,4BAAI,CAACC,KAAL,GAAaD,GAAb;AAEA,4BAAI,CAAC/B,IAAL,GAAa,MAAI,CAACgC,KAAlB;AACH,qBALE;;;;;;;;;AAMJ;AAhEwB;AAAA;AAAA,mCAiEX;;;;;;AACZ,yBAAKtB,QAAL;AACF,yBAAKV,IAAL,GAAa,KAAKgC,KAAlB;;;;;;;;;AACD;AApE0B;AAAA;AAAA,qCAsEjB;AACR,eAAKrC,MAAL,CAAYsB,aAAZ,CAA0B,QAA1B;AACD;AAxE0B;AAAA;AAAA,mCA0ER;;;;;;;;AAEC,2BAAM,KAAKlB,iBAAL,CAAuByB,MAAvB,CAA8B;AAClDC,6BAAO,EAAE;AADyC,qBAA9B,CAAN;;;AAAVC,2B;;AAGN,2BAAMA,OAAO,CAACC,OAAR,EAAN;;;AAEA,wBAAI,KAAKpB,MAAT,EAAiB;AACf,2BAAK0B,UAAL,CAAgB,KAAKjC,IAArB,EAA2B,KAAKO,MAAhC,EAAwCS,IAAxC,CAA6C,YAAM;AACjDU,+BAAO,CAACE,OAAR;AAED,uBAHD;AAID,qBALD,MAKO;AACL,2BAAKM,OAAL,CAAa,KAAKlC,IAAlB,EAAwBgB,IAAxB,CAA6B,YAAM;AACjCU,+BAAO,CAACE,OAAR;AAGD,uBAJD;AAKD;;;;;;;;;AACF;AA7FwB;;AAAA;AAAA,OAA3B;;;;cAY8B;;cAAsB;;cAA6B;;cAAkC;;cAA6C;;;;AAZnJlC,kBAAc,6DAL1B,gEAAU;AACTyC,cAAQ,EAAE,iBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,sGAFS;;;;AAAA,KAAV,CAK0B,E,+EAYG,sD,EAAsB,8D,EAA6B,4D,EAAkC,wE,EAA6C,gE,EAZrI,GAAd1C,cAAc,CAAd","file":"task-detail-task-detail-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tasks\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Details</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content >\\n\\n  <ion-list  >\\n  \\n    <ion-item> <label for=\\\"\\\">id :</label>\\n      <ion-input required type=\\\"text\\\" placeholder=\\\"Task\\\" [(ngModel)]=\\\"taskId\\\"></ion-input>\\n    </ion-item>\\n    <ion-item> <label for=\\\"\\\">Name :</label>\\n      <ion-input required type=\\\"text\\\" placeholder=\\\"Task\\\" [(ngModel)]=\\\"task.task \\\"></ion-input>\\n    </ion-item>\\n    <ion-item> \\n      <label  color=\\\"danger\\\" for=\\\"\\\"> Priorite :</label>\\n  \\n      <ion-input required type=\\\"number\\\" placeholder=\\\"Priority\\\" [(ngModel)]=\\\"task.priority\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon  name=\\\"alarm-outline\\\"></ion-icon> <label for=\\\"\\\"> Creat AT:</label> \\n      <ion-input type=\\\"date\\\" value =\\\"number\\\" placeholder=\\\"created at\\\" [(ngModel)]=\\\"task.createdAt  \\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <label color=\\\"primary\\\" for=\\\"\\\">Closed AT:</label>\\n      <ion-input type=\\\"date\\\"  value=\\\"number \\\" placeholder=\\\"Priority\\\" [(ngModel)]=\\\"task.closedAt\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <label for=\\\"\\\"></label><span>Closed :</span>\\n    \\n      <ion-checkbox id=\\\"checkbox\\\" [(ngModel)]=\\\"task.closed\\\"></ion-checkbox>\\n    </ion-item>\\n   \\n  </ion-list>\\n  <ion-button expand=\\\"full\\\" (click)=\\\"saveTodo(task)\\\">Save</ion-button>\\n  <ion-button expand=\\\"full\\\" (click)=\\\"removeTask(taskId)\\\" color=\\\"danger\\\"  >Delete</ion-button>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfilePageResolver } from '.././profile/profile.resolver';\nimport { ProfilePageGuard } from '.././profile/profile-can-activate.guard';\nimport { TaskDetailPage } from './task-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskDetailPage,  resolve: {\n      data: ProfilePageResolver\n    },\n  \n  \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],providers: [ProfilePageResolver, ProfilePageGuard]\n})\nexport class TaskDetailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskDetailPageRoutingModule } from './task-detail-routing.module';\n\nimport { TaskDetailPage } from './task-detail.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TaskDetailPageRoutingModule,\n  ],\n  declarations: [TaskDetailPage]\n})\nexport class TaskDetailPageModule {}\n","export default \".checkbox {\\n  --checkmark-width:\\\"60px\\\";\\n  --color: rgb(201, 119, 12);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzay1kZXRhaWwvQzpcXFVzZXJzXFxhY2hpZ1xcaW9uaWNfcHJqXFxpb25pYzUtZmlyZWJhc2Uvc3JjXFxhcHBcXHRhc2stZGV0YWlsXFx0YXNrLWRldGFpbC5wYWdlLnNjc3MiLCJzcmMvYXBwL3Rhc2stZGV0YWlsL3Rhc2stZGV0YWlsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFVLHdCQUFBO0VBQ04sMEJBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stZGV0YWlsL3Rhc2stZGV0YWlsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGVja2JveHstLWNoZWNrbWFyay13aWR0aCA6XCI2MHB4XCI7XHJcbiAgICAtLWNvbG9yOiByZ2IoMjAxLCAxMTksIDEyKTt9XHJcbiIsIi5jaGVja2JveCB7XG4gIC0tY2hlY2ttYXJrLXdpZHRoOlwiNjBweFwiO1xuICAtLWNvbG9yOiByZ2IoMjAxLCAxMTksIDEyKTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport { NavController, LoadingController } from '@ionic/angular';\n\nimport { Injectable } from '@angular/core';\nimport { Task , TaskService } from '../task.service';\nimport {TasksPage} from '../tasks/tasks.page'\nimport { AngularFirestore,AngularFirestoreCollection } from '@angular/fire/firestore';\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.page.html',\n  styleUrls: ['./task-detail.page.scss'],\n})\nexport class TaskDetailPage implements OnInit {\n  task: Task = {\n    task: 'test',\n    createdAt: new Date().getTime(),\n    priority: 2,\n    closedAt:'',\n    closed:false\n  };\n  tskpg:TasksPage\n  taskId = null;\n  todos: Task;\n  private todosCollection: AngularFirestoreCollection<Task>;\n  constructor(private router: Router,private route: ActivatedRoute, private nav: NavController, private fireStore: AngularFirestore, private loadingController: LoadingController) { \nthis.todosCollection=this.fireStore.collection('tasks');\nthis.loadTodo();\n  }\n  \n\n  \n  updateTask(todo: Task, id: string) {\n    return this.todosCollection.doc(id).update(todo);\n  }\n \n  addTask(todo: Task) {\n    return this.todosCollection.add(todo)\n    .then(()=>{this.router.navigateByUrl('/tasks');})\n    .catch(err=>{console.error(err)})\n\n  }\n\n\n\n  async removeTask(id) {\n    return this.todosCollection.doc(id).delete()\n    .then(()=>{this.router.navigateByUrl('/tasks');})\n    .catch(err=>{console.error(err)})\n  \n  }\n  getTodo(id) {\n    return this.todosCollection.doc<Task>(id).valueChanges();\n  }\n  ngOnInit() {\n    this.taskId = this.route.snapshot.params.id;\n  if (this.taskId)  {\n    \n  this.loadTodo();\n  }\n  }\n  async loadTodo() {\n    const loading = await this.loadingController.create({\n      message: 'Loading Todo..'\n    });\n    await loading.present();\n \n    {\n      \n    }\n    loading.dismiss();\n       this.getTodo(this.taskId).subscribe(res => {\n        \n        this.todos = res;\n      \n        this.task =  this.todos;\n    });\n  }\n  async lireTodo(){\n    this.loadTodo;\n  this.task =  this.todos;\n}\n\ngotaskpage(){\n  this.router.navigateByUrl('/tasks');\n}\n\n  async saveTodo() {\n \n    const loading = await this.loadingController.create({\n      message: 'Saving Todo..'\n    });\n    await loading.present();\n \n    if (this.taskId) {\n      this.updateTask(this.task, this.taskId).then(() => {\n        loading.dismiss();\n      \n      });\n    } else {\n      this.addTask(this.task).then(() => {\n        loading.dismiss();\n        \n        \n      });\n    }\n  }\n\n\n}\n"]}