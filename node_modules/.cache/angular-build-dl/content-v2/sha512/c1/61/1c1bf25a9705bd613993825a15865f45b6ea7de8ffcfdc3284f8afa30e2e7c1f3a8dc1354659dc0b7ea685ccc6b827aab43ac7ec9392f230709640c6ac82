{"version":3,"sources":["webpack:///src/app/task-detail/task-detail.page.html","webpack:///src/app/task-detail/task-detail-routing.module.ts","webpack:///src/app/task-detail/task-detail.module.ts","webpack:///src/app/task-detail/task-detail.page.scss","webpack:///src/app/task-detail/task-detail.page.ts"],"names":["routes","path","component","TaskDetailPageRoutingModule","imports","forChild","exports","TaskDetailPageModule","declarations","TaskDetailPage","route","nav","taskService","loadingController","task","createdAt","Date","getTime","priority","closedAt","closed","taskId","snapshot","params","id","loadTodo","create","message","loading","present","dismiss","getTask","subscribe","res","todos","updateTask","then","addTask","selector","template"],"mappings":"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","file":"task-detail-task-detail-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tasks\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Details</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content >\\n\\n  <ion-list lines=\\\"full\\\">\\n    <ion-item> <label for=\\\"\\\">id :</label>\\n      <ion-input required type=\\\"text\\\" placeholder=\\\"Task\\\" [(ngModel)]=\\\"taskId\\\"></ion-input>\\n    </ion-item>\\n    <ion-item> <label for=\\\"\\\">Nmae :</label>\\n      <ion-input required type=\\\"text\\\" placeholder=\\\"Task\\\" [(ngModel)]=\\\"todos.task\\\"></ion-input>\\n    </ion-item>\\n    <ion-item> <label for=\\\"\\\">Priorite :</label>\\n  \\n      <ion-input required type=\\\"number\\\" placeholder=\\\"Priority\\\" [(ngModel)]=\\\"todos.priority\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon  name=\\\"alarm-outline\\\"></ion-icon> <label for=\\\"\\\"> Creat AT:</label> \\n      <ion-input required type=\\\"text\\\" placeholder=\\\"created at\\\" [(ngModel)]=\\\"todos.createdAt  \\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <label color=\\\"primary\\\" for=\\\"\\\">Closed AT:</label>\\n      <ion-input required type=\\\"number\\\" placeholder=\\\"Priority\\\" [(ngModel)]=\\\"todos.closedAt\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <label for=\\\"\\\"></label><span>Closed :</span>\\n      <ion-input  forcolor=\\\"primary\\\" type=\\\"number\\\" placeholder=\\\"oui/non\\\" [(ngModel)]=\\\"todos.closed\\\"></ion-input>\\n   \\n    </ion-item>\\n   \\n  </ion-list>\\n  <ion-button expand=\\\"full\\\" (click)=\\\"saveTodo()\\\">Save</ion-button>\\n  \\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskDetailPage } from './task-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskDetailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskDetailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskDetailPageRoutingModule } from './task-detail-routing.module';\n\nimport { TaskDetailPage } from './task-detail.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TaskDetailPageRoutingModule\n  ],\n  declarations: [TaskDetailPage]\n})\nexport class TaskDetailPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stZGV0YWlsL3Rhc2stZGV0YWlsLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavController, LoadingController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { Task , TaskService } from '../task.service';\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.page.html',\n  styleUrls: ['./task-detail.page.scss'],\n})\nexport class TaskDetailPage implements OnInit {\n  task: Task = {\n    task: 'test',\n    createdAt: new Date().getTime(),\n    priority: 2,\n    closedAt:'',\n    closed:false\n  };\n  taskId = null;\n  todos: Task;\n  constructor(private route: ActivatedRoute, private nav: NavController, private taskService: TaskService, private loadingController: LoadingController) { }\n  \n  \n  ngOnInit() {\n    this.taskId = this.route.snapshot.params.id;\n  if (this.taskId)  {\n    \n  this.loadTodo();\n  }\n  }\n  async loadTodo() {\n    const loading = await this.loadingController.create({\n      message: 'Loading Todo..'\n    });\n    await loading.present();\n \n    {}\n      loading.dismiss();\n       this.taskService.getTask(this.taskId).subscribe(res => {\n        \n        this.todos = res;\n        loading.dismiss();\n    });\n  }\n  async saveTodo() {\n \n    const loading = await this.loadingController.create({\n      message: 'Saving Todo..'\n    });\n    await loading.present();\n \n    if (this.taskId) {\n      this.taskService.updateTask(this.task, this.taskId).then(() => {\n        loading.dismiss();\n      \n      });\n    } else {\n      this.taskService.addTask(this.task).then(() => {\n        loading.dismiss();\n        \n        \n      });\n    }\n  }\n\n\n}\n"]}